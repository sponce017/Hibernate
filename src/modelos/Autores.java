package modelos;

// Generated 07-24-2013 10:35:21 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Autores generated by hbm2java
 */
@Entity
@Table(name = "AUTORES", schema = "PONCE")
public class Autores implements java.io.Serializable {

	private BigDecimal id;
	private String nombre;
	private String apellidos;
	private Set<Libros> librosesForAutor1 = new HashSet<Libros>(0);
	private Set<Libros> librosesForAutor2 = new HashSet<Libros>(0);
	private Set<Libros> librosesForAutor3 = new HashSet<Libros>(0);

	public Autores() {
	}

	public Autores(BigDecimal id) {
		this.id = id;
	}

	public Autores(BigDecimal id, String nombre, String apellidos,
			Set<Libros> librosesForAutor1, Set<Libros> librosesForAutor2,
			Set<Libros> librosesForAutor3) {
		this.id = id;
		this.nombre = nombre;
		this.apellidos = apellidos;
		this.librosesForAutor1 = librosesForAutor1;
		this.librosesForAutor2 = librosesForAutor2;
		this.librosesForAutor3 = librosesForAutor3;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, precision = 22, scale = 0)
	public BigDecimal getId() {
		return this.id;
	}

	public void setId(BigDecimal id) {
		this.id = id;
	}

	@Column(name = "NOMBRE", length = 50)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "APELLIDOS", length = 50)
	public String getApellidos() {
		return this.apellidos;
	}

	public void setApellidos(String apellidos) {
		this.apellidos = apellidos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "autoresByAutor1")
	public Set<Libros> getLibrosesForAutor1() {
		return this.librosesForAutor1;
	}

	public void setLibrosesForAutor1(Set<Libros> librosesForAutor1) {
		this.librosesForAutor1 = librosesForAutor1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "autoresByAutor2")
	public Set<Libros> getLibrosesForAutor2() {
		return this.librosesForAutor2;
	}

	public void setLibrosesForAutor2(Set<Libros> librosesForAutor2) {
		this.librosesForAutor2 = librosesForAutor2;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "autoresByAutor3")
	public Set<Libros> getLibrosesForAutor3() {
		return this.librosesForAutor3;
	}

	public void setLibrosesForAutor3(Set<Libros> librosesForAutor3) {
		this.librosesForAutor3 = librosesForAutor3;
	}

}
